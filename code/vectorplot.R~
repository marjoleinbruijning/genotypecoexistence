

##########################################################################################
## Obtain niche overlap and fitness difference using IPM
##########################################################################################

## Get vital rate predictions for each treatment and posterior draw
treatments <- expand.grid(nHetero=allN,nCon=allN,country=c('N','B'),temp=allTemp,clone=NA)
l <- array(NA,dim=c(nrow(treatments),ndraws))
dN <- array(NA,dim=c(n,n,2,length(allTemp),ndraws))

vr <- buildVitalrates(allsizes,
                      treatments=treatments,
                      ndraws=ndraws,
                      predeffect='posterior')

## Build IPM for each posterior draw and combination
for (i in 1:nrow(treatments)) {

    incF <- vr$df$nHetero == treatments$nH[i] & vr$df$nCon == treatments$nC[i] &
        vr$df$country == treatments$country[i] &
        vr$df$temp == treatments$temp[i] & vr$df$sex == 'f'
    
    ##incM <- vr$df$nHetero == treatments$nH[i] & vr$df$nCon == treatments$nC[i] &
    ##    vr$df$country == treatments$country[i] &
    ##    vr$df$temp == treatments$temp[i] & vr$df$sex == 'm'

    for (j in 1:ndraws) {
        
        ipm <- createIPM(allsizes,
                         P=vr$P[j,incF],
                         ##Pmale=vr$P[j,incM],
                         growth=vr$growth[j,incF],
                         ##growthM=vr$P[j,incM],
                         R1=vr$R1[j,incF],
                         R2=vr$R2[j,incF],
                         R3=vr$R3[j,incF],
                         R4=vr$R4[j,incF],
                         offsize=vr$offsize[j,incF],
                         nc=nc)
        
        l[i,j] <- eigenAnalysis(ipm$ipm)$lambda##eigenAnalysis(ipm$ipm[1:nc,1:nc])$lambda

        ## Save in dN array to ease plotting
        if (treatments$country[i] == 'B') {
            dN[which(allN == treatments$nC[i]),
               which(allN == treatments$nH[i]),1,
               which(allTemp == treatments$temp[i]),j] <- l[i,j] ## Belgian
            
        } else {
            dN[which(allN == treatments$nH[i]),
               which(allN == treatments$nC[i]),2,
               which(allTemp == treatments$temp[i]),j] <- l[i,j] ## Norwegian
        }

        cat('\r',i,'-',j)

    }  
}

saveRDS(dN,file='Results/coexistence.rds')


## Mean predictions
dNmean <- array(NA,dim=c(n,n,2,length(allTemp)))
l <- rep(NA,nrow(treatments))

for (i in 1:nrow(treatments)) {

    incF <- vr$df$nHetero == treatments$nH[i] & vr$df$nCon == treatments$nC[i] &
        vr$df$country == treatments$country[i] &
        vr$df$temp == treatments$temp[i] & vr$df$sex == 'f'
    
    ##incM <- vr$df$nHetero == treatments$nH[i] & vr$df$nCon == treatments$nC[i] &
    ##    vr$df$country == treatments$country[i] &
    ##    vr$df$temp == treatments$temp[i] & vr$df$sex == 'm'

    
    ipm <- createIPM(allsizes,
                     P=colMeans(vr$P[,incF]),
                     ##Pmale=colMeans(vr$P[,incM]),
                     growth=colMeans(vr$growth[,incF]),
                     ##growthM=colMeans(vr$P[,incM]),
                     R1=colMeans(vr$R1[,incF]),
                     R2=colMeans(vr$R2[,incF]),
                     R3=colMeans(vr$R3[,incF]),
                     R4=colMeans(vr$R4[,incF]),
                     offsize=colMeans(vr$offsize[,incF]),
                     nc=nc)
    
    l[i] <- eigenAnalysis(ipm$ipm)$lambda##[1:nc,1:nc])$lambda

    ## Save in dN array to ease plotting
    if (treatments$country[i] == 'B') {
        dNmean[which(allN == treatments$nC[i]),
               which(allN == treatments$nH[i]),1,
               which(allTemp == treatments$temp[i])] <- l[i] ## Belgian
        
    } else {
        dNmean[which(allN == treatments$nH[i]),
               which(allN == treatments$nC[i]),2,
               which(allTemp == treatments$temp[i])] <- l[i] ## Norwegian
    }

    cat('\r',i)

}  


saveRDS(dNmean,file='Results/coexistenceMean.rds')





####################################### OLD

old <- function () {
    ## save output
    dN <- array(NA,dim=c(n,n,2,length(allTemp)))

    for (k in 1:length(allTemp)) {

        temp <- allTemp[k]

        ## Vector plot
        for (i in 1:n) { ## vary Norwegian pop sizes
            for (j in 1:n) { ## Vary Belgian pop sizes

                ## Belgian change in density
                ipm1 <- createIPM(allsizes,
                                  temp=temp,
                                  nH=allN[i],
                                  nC=allN[j],
                                  nSc=NA,
                                  country='B')

                ## Norwegian change in density
                ipm2 <- createIPM(allsizes,
                                  temp=temp,
                                  nH=allN[j],
                                  nC=allN[i],
                                  nSc=NA,
                                  country='N')

                dN[j,i,1,k] <- eigenAnalysis(ipm1$ipm[1:nc,1:nc])$lambda ##eigenAnalysis(ipm1$ipm)$lambda
                dN[j,i,2,k] <- eigenAnalysis(ipm2$ipm[1:nc,1:nc])$lambda ##eigenAnalysis(ipm2$ipm)$lambda
                
                
                cat('\r',i,'-',j)
            }
        }
    }
}
