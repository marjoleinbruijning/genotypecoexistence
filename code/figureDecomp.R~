

## Figure decomposition
dN <- readRDS('Results/decomposition.rds')

propb <- array(NA,dim=c(length(allTemp),length(changeVR),ndraws))
pars <- array(NA,dim=c(length(allTemp),4,ndraws),
              dimnames=list(allTemp,c('a12','a11','a22','a21'),1:ndraws))

for (k in 1:length(allTemp)) {

    for (z in 1:length(changeVR)) {
        
        for (j in 1:ndraws) {

            mod <- list()

            for (i in 1:2) { # First B, then N
                df <- contourLines(allN,allN,log(dN[,,i,k,z,j]),levels=0) ## get values where log lambda=0
                if (length(df) > 0) {
                    df <- data.frame(n2=df[[1]]$y,n1=df[[1]]$x)
                    mod[[i]] <- lm(n2~n1,data=df)
                }
            }

            if (all(unlist(lapply(mod,length)) > 0)) {
                ## Predict eq proportions (where do nullclines intersect?)
                beq <- (coef(mod[[1]])[1] - coef(mod[[2]])[1]) / ( coef(mod[[2]])[2] - coef(mod[[1]])[2] )
                neq <- predict(mod[[1]],newdata=data.frame(n1=beq))

                if (beq < 0) beq <- 0
                if (neq < 0) neq <- 0
                propb[k,z,j] <- beq / (beq + neq)

              }
        }
    }
}


##
pdf('Results/decompFigure.pdf',width=12,height=8)

ly <- matrix(0,nrow=7,ncol=16)
ly[1:3,1:3] <- 1
ly[1:3,4:6] <- 2
ly[1:3,7:9] <- 3
ly[1:3,10:12] <- 4
ly[1:3,13:15] <- 5

ly[5:7,2:4] <- 6
ly[5:7,5:7] <- 7
ly[5:7,8:10] <- 8
ly[5:7,11:13] <- 9

layout(ly)

cols <-  wesanderson::wes_palette("GrandBudapest1", 7, type = "continuous")
namess <- c('Original','Survival','Growth','Carrying eggs','Egg development','Clutch size',
            'Female probability','Neonate size')


par(mar=c(1,2,1,1),oma=c(4,1,2,1))

plot(100,100,xlim=c(1,3),ylim=c(.5,7.5),bty='n',xaxt='n',yaxt='n',xlab='',ylab='',
     xaxs='i',yaxs='i')
text(rep(3,7),1:7,labels=namess[-1],pos=2,cex=1.5)
mtext('Exchanged vital rate',2,outer=FALSE,line=-3)

for (i in 1:length(allTemp)) {

    df <- data.frame(vr=rep(unlist(changeVR),ndraws),prop=c(propb[i,,]))
    df$vr[is.na(df$vr)] <- 'full'
    df$vr <- factor(df$vr,levels=c('full','surv','growth','eggs','repr','clutch','sexoff','offsize'))

    plot(100,100,xlim=c(0,1),ylim=c(.5,7.5),xlab='',yaxt='n',ylab='',
         bty='n',xaxs='i',yaxs='i',xaxt='n')
    abline(v=seq(0,1,.25),lty=2,col='grey')
    abline(v=.5,col='grey')
    axis(1,at=seq(0,1,.25))
    mtext(paste0(round(allTemp[i]*scTemp[2]+scTemp[1]),'째C'),3)

    abline(v=median(df$prop[df$vr == 'full'],na.rm=TRUE),lwd=3)
    abline(v=c(0,1))
    abline(h=7.5)

    for (j in 1:7) {
        inc <- df$vr == levels(df$vr)[j+1]
        quant <- quantile(df$prop[inc],prob=c(.05,.25,.5,.75,.95),na.rm=TRUE)
        points(quant[3],j,col=cols[j],cex=2.5,pch=16)
        segments(x0=quant[2],x1=quant[4],y0=j,col=cols[j],lwd=4)
        segments(x0=quant[1],x1=quant[5],y0=j,col=cols[j],lty=1,lwd=1)
    }
}



## Violin plot
temps <- (c(18,26) - scTemp[1]) / scTemp[2] ##unique(dat$temp)[c(2,4)]

highdens <- quantile(dat$n,prob=.9)

df <- expand.grid(size=1,size2=1,country=c('B','N'),nCon=c(1,highdens),nHetero=c(1,highdens),temp=temps)
df <- df[!(df$nCon == highdens & df$nHetero == highdens),]
pred <- plogis(posterior_linpred(modSexoff,newdata=df,re_formula=NA))

namess <- c('Low density','High sympatric\ndensity','High allopatric\ndensity')

for (j in 1:2) { ## over temperature
    for (i in 1:2) { ## over country

        inc <- df$temp == temps[j] & df$country == names(colsCountry)[i]

        vioplot::vioplot(pred[,inc],col=colsCountry[i],ylim=c(0,1),yaxt='n',bty='l',
                         xaxt='n')
        
        if (i == 1 & j == 1) {
            axis(2)
            mtext('Neonate female probability',2,line=2)
        } else {        
            axis(2,labels=NA)
        }

        if (i == 1 & j == 1) text(1,0.05,col=colsCountry[1],labels='Southern\n genotypes',cex=1.2)
        if (i == 2 & j == 1) text(1,0.05,col=colsCountry[2],labels='Northern\n genotypes',cex=1.2)

   
        text(1:3, -.1,#par("usr")[3]-0.25, 
             srt = 45, adj = 1, xpd = NA,
             labels = namess, cex = 1)
    }
}



text(-10,2.7,labels='A) Decomposition analysis',xpd=NA,cex=2)
text(-8.8,1.2,labels='B) Density-dependent neonate sex ratios',xpd=NA,cex=2)
text(-1,1.35,labels='Equilibrium proportion Southern clones',xpd=NA,cex=1.5)

text(-8,1.1,labels=paste0(' ',scTemp[2]*temps[1]+scTemp[1],' 째C'),cex=2,xpd=NA)
text(-.3,1.1,labels=paste0(' ',scTemp[2]*temps[2]+scTemp[1],' 째C'),cex=2,xpd=NA)



dev.off()





############################################################################
## OLD
############################################################################
old <- function () {

    cols <-  c('#e41a1c','#377eb8','#4daf4a','#984ea3','#ff7f00','#ffff33','#a65628')

    quant <- matrix(NA,nrow=8,ncol=4)

    for (i in 1:4) {
        df <- data.frame(vr=rep(unlist(changeVR),ndraws),prop=c(propb[i,,]))
        df$vr[is.na(df$vr)] <- 'full'
        df$vr <- factor(df$vr,levels=c('full','surv','growth','eggs','repr','clutch','sexoff','offsize'))

        for (j in 1:8) {
            inc <- df$vr == levels(df$vr)[j]
            quant[j,i] <- quantile(df$prop[inc],prob=c(.5),na.rm=TRUE)
        }
        
    }

    quant <- apply(quant,2,function(x) x-x[1])
    quant <- apply(quant,2,function(x) x / sum(abs(x)))
    quant <- quant[-1,]
    rownames(quant) <- namess[-1]

    pdf('Results/decompPresentation.pdf')
    par(mfrow=c(1,4),mar=c(3,3,1,1),oma=c(3,3,3,3))
    for (i in 1:4) {
        barplot(cbind(rev(abs(quant[,i]))),col=rev(cols),yaxt='n',xaxt='n')
        barplot(cbind(rev(abs(quant[,i]))),density=ifelse(rev(quant[,i]) < 0, 10,0),add=TRUE,col='black',
                xaxt='n',yaxt='n')
        if (i == 1) axis(2,cex.axis=2)    
    }
    dev.off()
    
    legend('topright',col=cols,lwd=2,legend=namess[-1],bg='white')
    
    colcomp <- c('#1b9e77','grey','#7570b3')


    
y <- matrix(NA,nrow=7,ncol=4)
for (j in 1:7) {

    for (i in 1:length(allTemp)) {

        df <- data.frame(vr=rep(unlist(changeVR),ndraws),prop=c(propb[i,,]))
        df$vr[is.na(df$vr)] <- 'full'
        df$vr <- factor(df$vr,levels=c('full','surv','growth','eggs','repr','clutch','sexoff','offsize'))

        inc <- df$vr == levels(df$vr)[j]
        d <- density(df$prop[inc],na.rm=T)
        hist(df$prop[inc],freq=F,xlab='',ylab='',col=paste0(cols[j],50),main='',
             xaxt='n',yaxt='n',ylim=c(0,6))
        #plot(100,100,xlim=c(0,1),ylim=c(0,max(d$y)),bty='n',xlab='',ylab='',
        #     yaxt='n',xaxt='n',xaxs="i", yaxs="i")

        if (j == 7) {
            axis(1,at=c(0,.5,1))
        }

        if (j == 1) {
            mtext(paste0(round(allTemp[i]*scTemp[2]+scTemp[1]),'째C'),3)
        }

        y[j,i] <- median(df$prop[inc],na.rm=TRUE)
        lines(x=c(y[1,i],y[1,i]), y=c(0,100),lwd=3,col=cols[1])
        abline(v=y[j,i],lwd=3,col=cols[j])

        arrows(x0=y[1,i],x1=y[j,i],y0=5,length=.05,col=cols[j],lwd=2)
        ##lines(d)
        ##polygon(d, col = paste0(cols[j],50))
        ##abline(v=c(0,.5,1),lwd=2,lty=c(1,2,1))
        abline(v=c(0,1),lwd=2,lty=c(1,1))

        if (i == 1) {
            mtext(namess[j],2)
        }
        
    }

}

mtext('Proportion Southern clones',1,
      outer=TRUE,line=1)
mtext('Exchanged vital rate',2,outer=TRUE,line=1)

dev.off()


    ## Stacked barplots coexistence outcomes
        cumsumm <- apply(matprop,1,cumsum)
    plot(100,100,xlim=c(18,32),ylim=c(0,1),bty='l',
         xlab='Temperature',ylab='Proportion of competitive outcomes',xaxt='n',yaxt='n',
         xaxs="i", yaxs="i")
    if (j == 7) axis(1)
    axis(4)
    
    for (z in 3:1) {
        ##lines(allTemp,cumsumm[z,],type='l',lwd=3)
        polygon(x=c(allTemp*scTemp[2]+scTemp[1],
                    rev(allTemp*scTemp[2]+scTemp[1]),allTemp[1]*scTemp[2]+scTemp[1]),
                y=c(cumsumm[z,],rep(0,length(allTemp)),cumsumm[z,1]),col=colcomp[z],border=NA)
    }

    if (j == 1) {
        text(20,.5,labels='Coexistence',pos=4)
        text(25,.85,labels='Southern clones\ndominate',pos=4)
        text(25,.1,labels='Northern clones\ndominate',pos=4)
    }

pdf('Results/decomposition.pdf',width=15,height=6)

dN <- readRDS(dN,file='Results/decomposition.rds')
namess <- c('Original','Surival','Growth','Carrying eggs','Egg development','Clutch size',
  'Female probability','Offspring size')

cols <- c('#1b9e77','#d95f02','#7570b3','#e7298a','#66a61e','#e6ab02','#a6761d')

nicheoverlap <- fitnessdiff <- propb <- matrix(NA,nrow=length(changeVR),ncol=length(allTemp))

for (m in 1:length(changeVR)) {

    for (k in 1:length(allTemp)) {
        ## Fit linear lines to obtain alpha coefficients
        mod <- list()
        for (i in 1:2) {
            df <- contourLines(allN,allN,log(dN[,,i,k,m]),levels=0)
            df <- data.frame(n2=df[[1]]$y,n1=df[[1]]$x)
            mod[[i]] <- lm(n2~n1,data=df)
        }
        ##  Get coefficients
        pars <- c(a11=NA,a12=NA,a21=NA,a22=NA)
        pars['a12'] <- 1/coef(mod[[1]])[1]
        pars['a11'] <- 1/ (-(coef(mod[[1]])[1]) / (coef(mod[[1]])[2]))

        pars['a22'] <- 1/coef(mod[[2]])[1]
        pars['a21'] <- 1/ (-(coef(mod[[2]])[1]) / (coef(mod[[2]])[2]))

        nicheoverlap[m,k] <- sqrt((pars['a21']*pars['a12'])/(pars['a11']*pars['a22']))
        fitnessdiff[m,k] <- sqrt((pars['a21']*pars['a22'])/(pars['a11']*pars['a12']))

        ## Predict eq proportions (where do nullclines intersect?)
        beq <- (coef(mod[[1]])[1] - coef(mod[[2]])[1]) / ( coef(mod[[2]])[2] - coef(mod[[1]])[2] )
        neq <- predict(mod[[1]],newdata=data.frame(n1=beq))

        if (beq < 0) beq <- 0
        if (neq < 0) neq <- 0
        propb[m,k] <- beq / (beq + neq)

    }
}


par(mfrow=c(1,3),oma=c(4,1,0,0),mar=c(1,3,3,1))

plot(100,100,
     ylim=c(0,1),
     xlim=c(18,34),
     xlab='',ylab='',
     bty='l',cex.axis=1.2)
mtext('Equilibrium proportion Southern genotypes',2,line=2.2)
abline(v=28,lwd=2,col='grey')

pred <- posterior_epred(modFreq,newdata=data.frame(temp=seq(-2,3,.1),day=28),re_formula=NA)
lines(seq(-2,3,.1)*scTemp[2]+scTemp[1],colMeans(pred),col='#00000060',lwd=2)
lines(seq(-2,3,.1)*scTemp[2]+scTemp[1],apply(pred,2,quantile,prob=.025),lty=2,col='#00000060')
lines(seq(-2,3,.1)*scTemp[2]+scTemp[1],apply(pred,2,quantile,prob=.975),lty=2,col='#00000060')


for (i in 1:ncol(propb)) {
    par(lend=1)

    segments(x0=seq(scTemp[1]+scTemp[2]*allTemp[i]-.4,scTemp[1]+scTemp[2]*allTemp[i]+.4,length.out=7),
             y0=propb[1,i],
             y1=propb[-1,i],lwd=5,col=cols)
    segments(x0=scTemp[1]+scTemp[2]*allTemp[i]-.5,
             x1=scTemp[1]+scTemp[2]*allTemp[i]+.5,
             y0=propb[1,i])

}
arrows(x0=18.5,
       y0=.39,y1=.55,length=.1)
arrows(x0=18.5,
       y0=.36,y1=.15,length=.1)
text(18.5,.5,labels='Northern\nadvantage',pos=4,cex=1.1)
text(18.5,.2,labels='Southern\nadvantage',pos=4,cex=1.1)




## Stabilization (niche overlap)
plot(100,100,xlim=range(allTemp)*scTemp[2]+scTemp[1],ylim=c(-.7,.7),
     xlab='',bty='l',cex.axis=1.2,ylab='')
mtext('Contribution to stabilization',2,line=2.2)
abline(v=28,lwd=2,col='grey')
abline(h=0,lty=2,lwd=2)
sapply(2:8,function(x) lines(allTemp*scTemp[2]+scTemp[1],nicheoverlap[x,]-nicheoverlap[1,],
                             col=cols[x-1],lwd=2,type='b'))

## Equalization (fitness difference)
plot(100,100,xlim=range(allTemp)*scTemp[2]+scTemp[1],ylim=c(-.7,.7),
     xlab='',bty='l',
     ylab='',cex.axis=1.2)
abline(v=28,lwd=2,col='grey')
mtext('Contribution to equalisation',2,line=2.2)
abline(h=0,lty=2,lwd=2)
sapply(2:8,function(x) lines(allTemp*scTemp[2]+scTemp[1],abs(1-fitnessdiff[x,])-abs(1-fitnessdiff[1,]),
                             col=cols[x-1],lwd=2,type='b'))

legend('topright',bty='n',col=cols,lwd=2,legend=namess[-1])
mtext('Temperature',1,line=2,outer=TRUE)

dev.off()
}
